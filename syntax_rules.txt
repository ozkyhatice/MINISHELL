bash-3.2$ ls -l | grep a |
> 
bash-3.2$ ls -l | grep a | |
bash: syntax error near unexpected token `|'
bash-3.2$ ls -l | grep a | | >
bash: syntax error near unexpected token `|'

bash-3.2$ ls -l | | ()
bash: syntax error near unexpected token `|'
bash-3.2$ ls -l > > ()
bash: syntax error near unexpected token `>'


bash-3.2$ ls -l > > ()
bash: syntax error near unexpected token `>'
bash-3.2$ ls -l < < ()
bash: syntax error near unexpected token `<'

bash-3.2$ ls -l >| >
bash: syntax error near unexpected token `>'
bash-3.2$ ls -l >|
bash: syntax error near unexpected token `newline'
bash-3.2$ ls -l >|
bash: syntax error near unexpected token `newline'
bash-3.2$ ls -l >| <
bash: syntax error near unexpected token `<'
bash-3.2$ ls -l > > )
bash: syntax error near unexpected token `>'
bash-3.2$ ls -l >| 
bash: syntax error near unexpected token `newline'
bash-3.2$ ls -l >| cc

bash: syntax error near unexpected token `|'
bash-3.2$ ls -l | grep  () | | ls
bash: syntax error near unexpected token `|'
bash-3.2$ ls -l | grep  () > > ls
bash: syntax error near unexpected token `>'
bash-3.2$ ls -l | grep  () >
bash: syntax error near unexpected token `>'
bash-3.2$ ls -l | grep  <| () 
bash: syntax error near unexpected token `|'
bash-3.2$ ls -l >
bash: syntax error near unexpected token `newline'
bash-3.2$ ls -l () > > )
bash: syntax error near unexpected token `('
bash-3.2$ ls -l () > > ()
bash: syntax error near unexpected token `('
bash-3.2$ ls -l () | | ()
bash: syntax error near unexpected token `('
bash-3.2$ ls -l () | | "()"
bash: syntax error near unexpected token `('
bash-3.2$ ls -l "()" | | "()"
bash: syntax error near unexpected token `|'

pipe pipe > redir sondays
redir sondaysa > redir pipe
redir redir > aç kapa parantez
redir redir > redir sondaysa
pipe pipe > aç kapa parantez
redir pipe > redir sondaysa

pipe pipe
redir redir

redir sonda
redir pipe
|| ||
((ls -l | | )))





ec"ho"->

"$US"ER->












int	ret_null(char c)
{
	return ((c >= '1' && c <= '9') || c == '*' || c == '@' || c == '!');
}

!!!!!!!!!!! butun splitler sonrası syntax ruleds yapılmalı parantez spliti yapılacak !!!
ekstra dollar errorunu syntax rulesa gondersin ordan ona gore dolara uygun error yazılsın!!!! AMA ECHOYLA CALISICAK BU OLMASA DA OLURRR
komutların tokenini değiştir!!!!!!!!


builtin pathi icin!!!
char	*denemepath = getcmdpath(shell->parse_head->word, shell->path);
			printf("path: %s\n", denemepath);
			free(denemepath);
#include "../include/minishell.h"

void	ft_fre_arr(char **str)
{
	int	i;

	i = 0;
	if (str[i] != NULL)
	{
		free(str[i]);
		i++;
	}
	free(str);
}

char	*getcmdpath(char *cmd, char **path)
{
	int		i;
	char	*cmdpath;
	char	*tmp;

	i = 0;
	while (path[i])
	{
		tmp = ft_strjoin(path[i], "/");
		cmdpath = ft_strjoin(tmp, cmd);
		if (access(cmdpath, F_OK) == 0)
		{
			free(tmp);
			return (cmdpath);
		}
		free(tmp);
		free(cmdpath);
		i++;
	}
	return (NULL);
}